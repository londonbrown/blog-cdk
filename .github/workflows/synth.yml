name: Synthesize CDK Stack

on:
  push:
    branches: ["main"]
  repository_dispatch:
    types: ["lambda-release"] # Runs when triggered by londonbrown/blog-lambdas
  workflow_dispatch:

jobs:
  synth:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Environment Variable for S3 Bucket
        run: echo "CDK_STAGING_BUCKET_NAME=${{ secrets.CDK_STAGING_BUCKET_NAME }}" >> $GITHUB_ENV

      - name: Fetch Latest Release from blog-lambdas
        id: get_release
        run: |
          RELEASE_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/londonbrown/blog-lambdas/releases/latest")
          echo "$RELEASE_JSON" | jq -r '.assets[] | select(.name | endswith(".zip")) | .browser_download_url' > release_assets.txt

      - name: Download and Extract Lambda Artifacts
        run: |
          mkdir -p lambdas
          while IFS= read -r url; do
            filename=$(basename "$url")
            curl -L -o "lambdas/$filename" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$url"
          done < release_assets.txt
          ls lambdas

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/BlogCDKGitHubOIDCDeployRole
          aws-region: us-east-1

      - name: Install CDK
        run: |
          npm install -g aws-cdk
          npm ci

      - name: Synthesize CDK Stack
        run: |
          mkdir -p cdk.out
          cdk synth

      - name: Set Commit Hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Upload Synthesized Artifacts to S3
        run: |
          aws s3 cp --recursive cdk.out/ s3://${{ secrets.S3_BUCKET_NAME }}/cdk-out/$COMMIT_HASH/
